When would you want to create a remote repository rather than keeping all your work local?
Having access to a remote repository is useful when the user has to travel, does not have a dedicated computer, or wants to work out of office.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
The remote repository may be used as a shared repository and if others are pushing their versions onto the remote and subsequently having these changes automatically pulled in to your local repository could make things untenable if you are in the midst of a project which uses files or even lines that have been modified remotely.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forking makes a copy of an existing users gitHub repository onto another users gitHub repository. Cloning duplicates a repository between gitHub and the users local drive. Branching allows a user to fork his existing repository so as to continue development along a path which he may later want to merge into the master branch.
Forking can be used when you want to duplicate someone elses repository but want to customize the contents of the files while still maintaning credit to the original author. Cloning can be used to make a local copy of your own remote repository on gitHub so that work can be done locally.

What is the benefit of having a copy of the last known state of the remote stored locally?
Having a local copy of the remote branch allows the user to compare or merge his work with the local copy of the remote branch while being offline. Then later he can do a push to update the remote.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Collaboration might involve maintaining directory structures containing copies of the different released versions of a project.  For a single user it will be easier to work on a project as it will involve just copying the latest release into a new directory and working from there. When it is time to save the completed project, it will involve checking all files with the prior release to ensure that only the expected changes were made. Have more than one user work on a project would become much more tedious as the users must agree on some protocol to ensure that their changes are in sync. It would be much easier to learn the collaboration philopsophy implemented in Git and GitHub and then consistently use it for years to come!